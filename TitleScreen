################################################################
# AUTHOR = JENNIFER JUNG, COLBY BOYD, ALAYNA JUNEAU
# TITLE = Tempoify
# DESCRIPTION = This displays the title screen.
# DATE = November 7, 2019
###################################################################

# neccessary imports for game
import pygame
import time
import random

# initialize pygame
pygame.init()
clock = pygame.time.Clock()

# width and height for screen
WIDTH = 800
HEIGHT = 450
gameDisplay = pygame.display.set_mode((WIDTH, HEIGHT))
background = pygame.image.load("TitleScreen.jpg")
# scale it so that it won't be pixelated!
background = pygame.transform.scale(background,(WIDTH,HEIGHT))
pygame.display.set_caption("Tempoify")

# RGB needed to make colors
WHITE  = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (200, 0, 0)
LIGHT_RED = (255, 0, 0)
GREEN = (34, 177, 76)
LIGHT_GREEN = (0, 255, 0)
BLUE = (0, 0, 128)
SKY_BLUE = (14, 77, 146)
DIAMOND = (183, 233, 247)

# get the font 
smallfont = pygame.font.SysFont("tahoma", 25)
medfont = pygame.font.SysFont("tahoma", 50)
largefont = pygame.font.SysFont("tahoma", 90)

# function that defines text size
def text_objects(text, color, size="small"):
    if size == "small":
        textSurface = smallfont.render(text, True, color)
    if size == "medium":
        textSurface = medfont.render(text, True, color)
    if size == "large":
        textSurface = largefont.render(text, True, color)
    return textSurface, textSurface.get_rect()

# function that puts text on the button
def text_to_button(msg, color, buttonx, buttony, buttonwidth, buttonheight, size="small"):
    textSurf, textRect = text_objects(msg, color, size)
    textRect.center = round(buttonx + (buttonwidth / 2)), round(buttony + (buttonheight / 2))
    gameDisplay.blit(textSurf, textRect)

# function that puts text to the screen
def message_to_screen(msg, color, y_displace=0, size="small"):
    textSurf, textRect = text_objects(msg, color, size)
    x = int(round((WIDTH / 2)))
    y = int(round((HEIGHT / 2) + y_displace))
    textRect.center = x, y
    gameDisplay.blit(textSurf, textRect)

# function for the button
def button(text, x, y, width, height, inactive_color, active_color, action=None):
    cur = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    # print(click)
    if x + width > cur[0] > x and y + height > cur[1] > y:
        pygame.draw.rect(gameDisplay, active_color, (x, y, width, height))
        if click[0] == 1 and action != None:
            if action == "quit":
                pygame.quit()
                quit()
            if action == "controls":
                pass
            if action == "next":
                import TemperatureScreen
    else:
        pygame.draw.rect(gameDisplay, inactive_color, (x, y, width, height))
    text_to_button(text, black, x, y, width, height)       

# main function that ties everything together
def game_intro():
    intro = True
    while intro:
        gameDisplay.blit(background,(0,0))
        for event in pygame.event.get():
            # print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_c:
                    intro = False
                elif event.key == pygame.K_q:
                    pygame.quit()
                    quit()
        
        # creates messages on the screen
        message_to_screen("Welcome to Tempoify!", BLUE, -100, size="large")
        message_to_screen("This is a game where your temperature will determine the song and tempo of the song!", BLUE, -50)
        message_to_screen("We hope that you will enjoy the game!", BLUE, -10)
        message_to_screen("When you are ready, please start pinching the thermistor to measure your temperature.", BLUE, 30)
        message_to_screen("Press Next as you are pinching the thermistor.", BLUE, 70)
        message_to_screen("By: Alayna Juneau, Colby Boyd, and Jennifer Jung", BLUE, 100)
        # creates the buttons on the screen
        button("Next", 150, 360, 100, 50, GREEN, LIGHT_GREEN, action="next")
        button("Quit", 550, 360, 100, 50, SKY_BLUE, DIAMOND, action="quit")
        # update the display 
        pygame.display.update()
        clock.tick(15)
        
game_intro()
