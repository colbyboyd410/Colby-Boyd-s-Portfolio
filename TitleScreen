################################################################
#AUTHOR = JENNIFER JUNG, COLBY BOYD, ALAYNA JUNEAU
#TITLE = Tempoify
#Discription = This displays the title screen
#Date = November 8, 2019
###################################################################

#Things to import
import pygame
import time
import random

###

#Initualize pygame
pygame.init()

###

#Some constraints and variables
display_width = 800
display_height = 450

gameDisplay = pygame.display.set_mode((display_width, display_height))
background = pygame.image.load("background2.JPG")
# scale it so that it won't be pixelated!
background = pygame.transform.scale(background,(display_width,display_height))

pygame.display.set_caption('Tempoify')

white  = (255, 255, 255)
black = (0, 0, 0)

red = (200, 0, 0)
light_red = (255, 0, 0)

yellow = (200, 200, 0)
light_yellow = (255, 255, 0)

green = (34, 177, 76)
light_green = (0, 255, 0)
purple = (169, 21, 179)
dark_purple = (90, 21, 179)

clock = pygame.time.Clock()

smallfont = pygame.font.SysFont("comicsansms", 25)
medfont = pygame.font.SysFont("comicsansms", 50)
largefont = pygame.font.SysFont("comicsansms", 90)



#Functions

#Function that displays the score
##def score(score):
##
##    text = smallfont.render("Score: "+str(score), True, black)
##    gameDisplay.blit(text, [0,0])

###

#Function that defines text size
def text_objects(text, color, size="small"):
    if size == "small":
        textSurface = smallfont.render(text, True, color)
    if size == "medium":
        textSurface = medfont.render(text, True, color)
    if size == "large":
        textSurface = largefont.render(text, True, color)

    return textSurface, textSurface.get_rect()

#Function that puts text on the button
def text_to_button(msg, color, buttonx, buttony, buttonwidth, buttonheight, size="small"):
    textSurf, textRect = text_objects(msg, color, size)
    textRect.center = round(buttonx + (buttonwidth / 2)), round(buttony + (buttonheight / 2))
    gameDisplay.blit(textSurf, textRect)

#function that makes it easy to put text to the screen
def message_to_screen(msg, color, y_displace=0, size="small"):
    textSurf, textRect = text_objects(msg, color, size)
    x = int(round((display_width / 2)))
    y = int(round((display_height / 2) + y_displace))

    textRect.center = x, y
    gameDisplay.blit(textSurf, textRect)

#Function for the button
def button(text, x, y, width, height, inactive_color, active_color, action=None):
    cur = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    # print(click)
    if x + width > cur[0] > x and y + height > cur[1] > y:
        pygame.draw.rect(gameDisplay, active_color, (x, y, width, height))
        if click[0] == 1 and action != None:
            if action == "quit":
                pygame.quit()
                quit()

            if action == "controls":
                pass

            if action == "play":
                import TemperatureScreen

    else:
        pygame.draw.rect(gameDisplay, inactive_color, (x, y, width, height))

    text_to_button(text, black, x, y, width, height)

#Pause function
def pause():

    paused = True
    message_to_screen("Paused",black,-100,size="large")
    message_to_screen("Press C to continue playing or Q to quit",black,25)
    pygame.display.update()
    while paused:
        for event in pygame.event.get():
                
                if event.type == pygame.QUIT:
                    pygame.quit()
                    quit()
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_c:
                        paused = False
                    elif event.key == pygame.K_q:
                        pygame.quit()
                        quit()

        clock.tick(5)
        
###

#Main game function that ties everything together
def game_intro():
    intro = True

    while intro:
        gameDisplay.blit(background,(0,0))
        for event in pygame.event.get():
            # print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_c:
                    intro = False
                elif event.key == pygame.K_q:

                    pygame.quit()
                    quit()

        message_to_screen("Welcome to Tempoify!", dark_purple, -100, size="large")
        message_to_screen("The objective is to become happy!", purple, -30)
        message_to_screen("We take your temperature and based on your mood", purple, 10)
        message_to_screen("we give you the best game possible.", purple, 50)
        message_to_screen("By: Alayna Juneau, Colby Boyd, and Jennifer Jung", purple, 90)
        # message_to_screen("Press C to play, P to pause or Q to quit",black,180)

        button("Play", 150, 375, 100, 50, green, light_green, action="play")
        button("Quit", 550, 375, 100, 50, red, light_red, action="quit")

        pygame.display.update()

        clock.tick(15)

game_intro()



