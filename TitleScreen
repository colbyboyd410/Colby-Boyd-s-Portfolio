################################################################
#AUTHOR = JENNIFER JUNG, COLBY BOYD, ALAYNA JUNEAU
#TITLE = Tempoify
#Discription = This displays the title screen
#Date = November 8, 2019
###################################################################

#Things to import
import pygame
import time
import random

#Initualize pygame
pygame.init()

###

#Some constraints and variables
display_width = 800
display_height = 450

gameDisplay = pygame.display.set_mode((display_width, display_height))
background = pygame.image.load("background2.JPG")
# scale it so that it won't be pixelated!
background = pygame.transform.scale(background,(display_width,display_height))

pygame.display.set_caption('Tempoify')

white  = (255, 255, 255)
black = (0, 0, 0)

red = (200, 0, 0)
light_red = (255, 0, 0)


green = (34, 177, 76)
light_green = (0, 255, 0)
blue = (0, 0, 128)
sky_blue = (14, 77, 146)
diamond = (183, 233, 247)

clock = pygame.time.Clock()

smallfont = pygame.font.SysFont("comicsansms", 25)
medfont = pygame.font.SysFont("comicsansms", 50)
largefont = pygame.font.SysFont("comicsansms", 90)

#Function that defines text size
def text_objects(text, color, size="small"):
    if size == "small":
        textSurface = smallfont.render(text, True, color)
    if size == "medium":
        textSurface = medfont.render(text, True, color)
    if size == "large":
        textSurface = largefont.render(text, True, color)

    return textSurface, textSurface.get_rect()

#Function that puts text on the button
def text_to_button(msg, color, buttonx, buttony, buttonwidth, buttonheight, size="small"):
    textSurf, textRect = text_objects(msg, color, size)
    textRect.center = round(buttonx + (buttonwidth / 2)), round(buttony + (buttonheight / 2))
    gameDisplay.blit(textSurf, textRect)

#function that makes it easy to put text to the screen
def message_to_screen(msg, color, y_displace=0, size="small"):
    textSurf, textRect = text_objects(msg, color, size)
    x = int(round((display_width / 2)))
    y = int(round((display_height / 2) + y_displace))

    textRect.center = x, y
    gameDisplay.blit(textSurf, textRect)

#Function for the button
def button(text, x, y, width, height, inactive_color, active_color, action=None):
    cur = pygame.mouse.get_pos()
    click = pygame.mouse.get_pressed()
    # print(click)
    if x + width > cur[0] > x and y + height > cur[1] > y:
        pygame.draw.rect(gameDisplay, active_color, (x, y, width, height))
        if click[0] == 1 and action != None:
            if action == "quit":
                pygame.quit()
                quit()

            if action == "controls":
                pass

            if action == "next":
                import TemperatureScreen

    else:
        pygame.draw.rect(gameDisplay, inactive_color, (x, y, width, height))

    text_to_button(text, black, x, y, width, height)
        
###

#Main game function that ties everything together
def game_intro():
    intro = True

    while intro:
        gameDisplay.blit(background,(0,0))
        for event in pygame.event.get():
            # print(event)
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_c:
                    intro = False
                elif event.key == pygame.K_q:

                    pygame.quit()
                    quit()

        message_to_screen("Welcome to Tempoify!", blue, -100, size="large")
        message_to_screen("This is a game where your temperature will determine the song and tempo of the song!", blue, -50)
        message_to_screen("We hope that you will enjoy the game!", blue, -10)
        message_to_screen("When you are ready, please start pinching the thermistor to measure your temperature.", blue, 30)
        message_to_screen("Press Next as you are pinching the thermistor.", blue, 70)
        message_to_screen("By: Alayna Juneau, Colby Boyd, and Jennifer Jung", blue, 100)

        button("Next", 150, 360, 100, 50, green, light_green, action="next")
        button("Quit", 550, 360, 100, 50, sky_blue, diamond, action="quit")

        pygame.display.update()

        clock.tick(15)

game_intro()


